@keyframes CubeAnimation {
    0% {
        transform:
                translateX(var(--start-pos-x))
                translateY(var(--start-pos-y))
                translateZ(0)
                rotateX(0deg)
                rotateY(0deg)
                rotateZ(0deg);
    }
    100% {
        transform:
                translateX(var(--end-pos-x))
                translateY(var(--end-pos-y))
                translateZ(0)
                rotateX(360deg)
                rotateY(360deg)
                rotateZ(360deg);
    }
}

@keyframes FaceAnimation {
    0% {
        width: 0;
        height: 0;
    }
    15% {
        width: var(--size);
        height: var(--size);
    }
    85% {
        width: var(--size);
        height: var(--size);
    }
    100% {
        width: 0;
        height: 0;
    }
}

.Scene {
    --progress: 0;
    @apply block w-full h-full relative overflow-hidden;

    perspective: 1000px;
}

.Cube {
    --idx: 0;
    --rand: 0;
    --sign: 1;
    --raw-size: 100;
    --size: calc(var(--raw-size) * 1px);
    --half-size: calc(var(--size) / 2);
    --n-half-size: calc(var(--size) / 2 * -1);
    --start-x: 0;
    --start-y: 0;
    --end-x: 0;
    --end-y: 0;
    --start-pos-x: calc(var(--start-x) * 1px - var(--size) * 2);
    --start-pos-y: calc(var(--start-y) * 1px);
    --end-pos-x: calc(var(--end-x) * 1px + var(--size) * 2);
    --end-pos-y: calc(var(--end-y) * 1px);
    --duration: 15000;
    --delay: calc(var(--duration) * var(--rand));
    --duration-ms: calc(var(--duration) * 1ms);
    --delay-ms: calc(var(--delay) * 1ms);
    --duration-progress: calc((var(--progress) / 100) * var(--duration-ms));

    transform-style: preserve-3d;
    width: var(--size);
    height: var(--size);
    position: absolute;
    top: 0;
    left: 0;
    will-change: transform;

    animation-name: CubeAnimation;
    animation-duration: calc(var(--duration-ms));
    animation-timing-function: linear;
    animation-fill-mode: both;
    animation-iteration-count: infinite;
    animation-delay: calc((var(--duration-progress) * -1) + var(--delay-ms));
}

.Face {
    @apply absolute flex justify-center items-center bg-amber-500 border-2 border-neutral-900;
    width: var(--size);
    height: var(--size);
    border-width: 2px;
    will-change: width, height;

    --duration: 10000;
    --delay: 0;
    --duration-ms: calc(var(--duration) * 1ms);
    --delay-ms: calc(var(--delay) * 1ms);
    --duration-progress: calc((var(--progress) / 100) * var(--duration-ms));

    animation-name: FaceAnimation;
    animation-duration: calc(var(--duration-ms));
    animation-timing-function: linear;
    animation-play-state: paused;
    animation-fill-mode: both;
    animation-delay: calc((var(--duration-progress) * -1) + var(--delay-ms));
}

.FrontFace {
    transform: translateZ(var(--half-size));
}

.BackFace {
    transform: translateZ(var(--n-half-size)) rotateY(180deg);
}

.TopFace {
    transform: translateY(var(--n-half-size)) rotateX(90deg);
}

.BottomFace {
    transform: translateY(var(--half-size)) rotateX(-90deg);
}

.LeftFace {
    transform: translateX(var(--n-half-size)) rotateY(-90deg);
}

.RightFace {
    transform: translateX(var(--half-size)) rotateY(90deg);
}